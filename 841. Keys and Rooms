Input: [[1],[2],[3],[]]
Output: true
Explanation:  
We start in room 0, and pick up key 1.
We then go to room 1, and pick up key 2.
We then go to room 2, and pick up key 3.
We then go to room 3.  Since we were able to go to every room, we return true.


Input: [[1,3],[3,0,1],[2],[0]]
Output: false
Explanation: We can't enter the room with number 2.


Solution :


class Solution {
    public boolean canVisitAllRooms(List<List<Integer>> rooms) {
       int[] visited = new int[rooms.size()];
       Queue<Integer> keys = new LinkedList();
        keys.add(0);
        
        while(!keys.isEmpty())
        {
            int key = keys.poll();
            visited[key] = 1 ;
            for(Integer i : rooms.get(key))
            {
                if(visited[i]==0)
                keys.add(i);
            }
            
        }
        
        for(int i=0;i<visited.length;i++)
        {
            if(visited[i]==0)
            {
                return false;
            }
        }
        return true;
       
        
        
    }
}
